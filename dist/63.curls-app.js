(window.webpackJsonp=window.webpackJsonp||[]).push([[63,190,191,192,193,194],{131:function(n,e,t){"use strict";t.r(e),t.d(e,"type",function(){return a}),t.d(e,"isFunctional",function(){return u});var o=t(321);t.d(e,"description",function(){return o.default});var r=t(322);t.d(e,"defaultTheme",function(){return r.default});var i=t(257);t.d(e,"Component",function(){return i.default});var s=t(320);t.d(e,"propTypes",function(){return s.default});var a="Component",u=!0},256:function(n,e,t){"use strict";t.r(e);var o=t(32),r=t.n(o),i=t(170),s=r()(i.breakpoints);s.reverse(),e.default=function(n){for(var e={},t=r()(n),o=!1,i=0;s.length>i;i++){var a=s[i];void 0!==n[a]&&(e[a]=n[a],o=!0)}if(!1===o)return n;for(var u=0;t.length>u;u++){var c=t[u];e[c]=n[c]}return e}},257:function(n,e,t){"use strict";t.r(e);var o=t(228),r=t(227),i=t(170),s=t(5),a=t(256),u=Object(s.default)({name:"Grid",propTypes:o.default,CSS:r,defaultTheme:i,themePath:"grid"});e.default=function(n){return u(Object(a.default)(n))}},320:function(n,e,t){"use strict";t.r(e),e.default={xxl:{type:"number",description:"Provides emotion class for `@value` number of columns in the `xxl` breakpoint to its child component."},xl:{type:"number",description:"Provides emotion class for `@value` number of columns in the `xl` breakpoint to its child component."},lg:{type:"number",description:"Provides emotion class for `@value` number of columns in the `lg` breakpoint to its child component."},md:{type:"number",description:"Provides emotion class for `@value` number of columns in the `md` breakpoint to its child component."},sm:{type:"number",description:"Provides emotion class for `@value` number of columns in the `sm` breakpoint to its child component."},xs:{type:"number",description:"Provides emotion class for `@value` number of columns in the `xs` breakpoint to its child component."},xxs:{type:"number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."}}},321:function(n,e,t){"use strict";t.r(e),e.default="\nThe `Grid` component provides a system for defining the number of columns\nthat a child component should occupy at various media query breakpoints.\n\n\nIf you're unfamiliar with grid systems, [Bootstrap has a very thorough guide](https://v4-alpha.getbootstrap.com/layout/grid/).\n\nUnlike Bootstrap, Curls uses different column counts at each breakpoint by\ndefault. You can override this by injecting your own theme with the\n[injectTheme](injectTheme) function. You can also override the breakpoint\nmedia queries. The default theme is below.\n"},322:function(n,e,t){"use strict";t.r(e),e.default={details:"\nTheme `breakpoints` are media queries provided in the form of either strings\nor objects conforming to the library [json2mq](https://github.com/akiran/json2mq).\n\nTheme `columns` dictate the number of breakpoints to horizontally split the\nusers screen into.\n",example:"\n{\n  grid: {\n    breakpoints: {\n      xxs: 'only screen and (max-width: 240px)',\n      xs: 'only screen and (max-width: 324px)',\n      sm: 'only screen and (max-width: 639px)',\n      md: 'only screen and (max-width: 1023px)',\n      lg: 'only screen and (max-width: 1279px)',\n      xl: 'only screen and (max-width: 1599px)',\n      xxl: 'only screen and (min-width: 0)',\n    },\n\n    columns: {\n      xxs: 2,\n      xs: 4,\n      sm: 4,\n      md: 8,\n      lg: 12,\n      xl: 16,\n      xxl: 16\n    }\n  }\n}\n"}}}]);