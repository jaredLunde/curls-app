(window.webpackJsonp=window.webpackJsonp||[]).push([[86,218,219,220],{140:function(n,e,o){"use strict";o.r(e),o.d(e,"type",function(){return a}),o.d(e,"isFunctional",function(){return l});var t=o(328);o.d(e,"description",function(){return t.default});var i=o(329);o.d(e,"defaultTheme",function(){return i.default});var s=o(327);o.d(e,"propTypes",function(){return s.default});var r=o(4);o.d(e,"Component",function(){return r.default});var a="Component",l=!0},327:function(n,e,o){"use strict";o.r(e),e.default={w:{defaultValue:240,type:"string|number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},h:{defaultValue:324,type:"string|number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},bg:{defaultValue:"white",type:"string",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},br:{defaultValue:2,type:"string|number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},bw:{defaultValue:"1 b0",type:"string|number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},bc:{defaultValue:"translucentLight",type:"string",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},sh:{defaultValue:16,type:"number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},m:{defaultValue:5,type:"string|number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},p:{type:"string|number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},z:{type:"number",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},pos:{type:"string",enumVals:["relative","absolute","fixed","sticky","static"],description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."},d:{type:"string",enumVals:["block","inlineBlock","inline","none"],description:"foo"},ov:{type:"string",enumVals:["auto","autoX","autoY","hidden","hiddenX","hiddenY","scroll","scrollX","scrollY"],description:"foo"},touchScrolling:{type:"bool",description:"Provides emotion class for `@value` number of columns in the `xxs` breakpoint to its child component."}}},328:function(n,e,o){"use strict";o.r(e),e.default="\n  The `Box` component provides `Flex` and `BasicBox` styles\n  to its child component.\n"},329:function(n,e,o){"use strict";o.r(e),e.default={details:"\nTheme `defaultColors` can be found on the [defaultColors](defaultColors) page.\n\nYou can override the scales with as many or few scale values as you'd like, but\nthey must be in rem.\n",example:"\n{\n  box: {\n    spacingScale: [\n      0,          // 0\n      (1/4) * 16, // 1\n      (2/4) * 16, // 2\n      16,         // 3\n      2 * 16,     // 4\n      4 * 16,     // 5\n      8 * 16,     // 6\n      16 * 16,    // 7\n    ],\n    borderWidthScale: [\n      0,          // 0\n      1,          // 1\n      2,          // 2\n      4,          // 3\n      6,          // 4\n      10          // 5\n    ],\n    borderRadiusScale: [\n      0,          // 0\n      (1/4) * 16, // 1\n      (1/2) * 16, // 2\n      16,         // 3\n      2 * 16,     // 4\n      1000 * 16   // 5\n    ],\n    colors: defaultColors,\n    getBoxShadow: function (dp, theme) {\n      dp = parseInt(dp)\n\n      if (dp === 0) {\n        return\n      }\n\n      const ambientY = dp\n      let ambientAlpha = (dp + 10) / 100\n      ambientAlpha = ambientAlpha > 0.24 ? 0.24 : ambientAlpha\n      const ambientBlur = dp === 1 ? 3 : dp * 1.5\n      let shadow = `px ${ambientY}px ${ambientBlur}px rgba(0, 0, 0, ${ambientAlpha})`\n      const directY = dp / 3\n      const directBlur = dp === 1 ? 3 : dp * 1.618\n      const directAlpha = (24 - (dp / 20)) / 100\n      shadow = `${shadow}, 0 ${directY}px ${directBlur}px rgba(0, 0, 0, ${ambientAlpha})`\n\n      return css`\n        box-shadow: ${shadow};\n      `\n    }\n  }\n}\n"}}}]);