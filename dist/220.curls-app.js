(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{329:function(n,e,a){"use strict";a.r(e),e.default={details:"\nTheme `defaultColors` can be found on the [defaultColors](defaultColors) page.\n\nYou can override the scales with as many or few scale values as you'd like, but\nthey must be in rem.\n",example:"\n{\n  box: {\n    spacingScale: [\n      0,          // 0\n      (1/4) * 16, // 1\n      (2/4) * 16, // 2\n      16,         // 3\n      2 * 16,     // 4\n      4 * 16,     // 5\n      8 * 16,     // 6\n      16 * 16,    // 7\n    ],\n    borderWidthScale: [\n      0,          // 0\n      1,          // 1\n      2,          // 2\n      4,          // 3\n      6,          // 4\n      10          // 5\n    ],\n    borderRadiusScale: [\n      0,          // 0\n      (1/4) * 16, // 1\n      (1/2) * 16, // 2\n      16,         // 3\n      2 * 16,     // 4\n      1000 * 16   // 5\n    ],\n    colors: defaultColors,\n    getBoxShadow: function (dp, theme) {\n      dp = parseInt(dp)\n\n      if (dp === 0) {\n        return\n      }\n\n      const ambientY = dp\n      let ambientAlpha = (dp + 10) / 100\n      ambientAlpha = ambientAlpha > 0.24 ? 0.24 : ambientAlpha\n      const ambientBlur = dp === 1 ? 3 : dp * 1.5\n      let shadow = `px ${ambientY}px ${ambientBlur}px rgba(0, 0, 0, ${ambientAlpha})`\n      const directY = dp / 3\n      const directBlur = dp === 1 ? 3 : dp * 1.618\n      const directAlpha = (24 - (dp / 20)) / 100\n      shadow = `${shadow}, 0 ${directY}px ${directBlur}px rgba(0, 0, 0, ${ambientAlpha})`\n\n      return css`\n        box-shadow: ${shadow};\n      `\n    }\n  }\n}\n"}}}]);